{
  "Solid Context (typescript)": {
    "prefix": "context",
    "description": "",
    "scope": "typescript",
    "body": [
      "import {",
      "  ContextProviderProps,",
      "  createContextProvider,",
      "} from '@solid-primitives/context';",
      "import { createUniqueId } from 'solid-js';",
      "import { createStore, SetStoreFunction } from 'solid-js/store';",
      "",
      "export type ${1/(.*)/${1:/pascalcase}/}State = {",
      "  ${1/(.*)/${1:/downcase}/}Id: string;",
      "};",
      "",
      "export type ${1/(.*)/${1:/pascalcase}/}Api = {",
      "  set: SetStoreFunction<${1/(.*)/${1:/pascalcase}/}State>;",
      "};",
      "",
      "interface ${1/(.*)/${1:/pascalcase}/}Props extends ContextProviderProps {",
      "  context?: (props: [${1/(.*)/${1:/pascalcase}/}State, ${1/(.*)/${1:/pascalcase}/}Api]) => void;",
      "  skipComputation?: boolean;",
      "}",
      "",
      "const contextFactory = (props: ${1/(.*)/${1:/pascalcase}/}Props): [${1/(.*)/${1:/pascalcase}/}State, ${1/(.*)/${1:/pascalcase}/}Api] => {",
      "  const [state, set] = createStore<${1/(.*)/${1:/pascalcase}/}State>({",
      "    ${1/(.*)/${1:/downcase}/}Id: `${1/(.*)/${1:/downcase}/}-${createUniqueId()}`,",
      "  });",
      "",
      "  const Api: ${1/(.*)/${1:/pascalcase}/}Api = {",
      "    set,",
      "  };",
      "",
      "  if (!props.skipComputation) {",
      "  }",
      "",
      "  if (props.context) {",
      "    props.context([state, Api]);",
      "  }",
      "",
      "  return [state, Api];",
      "};",
      "",

      "export const [${1/(.*)/${1:/pascalcase}/}Context, use${1/(.*)/${1:/pascalcase}/}Context] = createContextProvider(",
      "  contextFactory,",
      "  contextFactory({ skipComputation: true }),",
      ");",
      "",
      "// ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}",
      "${3}"
    ]
  }
}
